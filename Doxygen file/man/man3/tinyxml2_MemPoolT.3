.TH "tinyxml2::MemPoolT< ITEM_SIZE >" 3 "Wed Apr 29 2020" "Version 1" "Research Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tinyxml2::MemPoolT< ITEM_SIZE >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml2\&.h>\fP
.PP
Inherits \fBtinyxml2::MemPool\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum { \fBITEMS_PER_BLOCK\fP = (4 * 1024) / ITEM_SIZE }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMemPoolT\fP ()"
.br
.ti -1c
.RI "\fB~MemPoolT\fP ()"
.br
.ti -1c
.RI "void \fBClear\fP ()"
.br
.ti -1c
.RI "virtual int \fBItemSize\fP () const"
.br
.ti -1c
.RI "int \fBCurrentAllocs\fP () const"
.br
.ti -1c
.RI "virtual void * \fBAlloc\fP ()"
.br
.ti -1c
.RI "virtual void \fBFree\fP (void *mem)"
.br
.ti -1c
.RI "void \fBTrace\fP (const char *name)"
.br
.ti -1c
.RI "void \fBSetTracked\fP ()"
.br
.ti -1c
.RI "int \fBUntracked\fP () const"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<int ITEM_SIZE>
.br
class tinyxml2::MemPoolT< ITEM_SIZE >"

.PP
Definition at line 339 of file tinyxml2\&.h\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "template<int ITEM_SIZE> anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIITEMS_PER_BLOCK \fP\fP
.PP
Definition at line 430 of file tinyxml2\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<int ITEM_SIZE> \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::\fBMemPoolT\fP ()\fC [inline]\fP"

.PP
Definition at line 342 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::~\fBMemPoolT\fP ()\fC [inline]\fP"

.PP
Definition at line 343 of file tinyxml2\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<int ITEM_SIZE> virtual void* \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::Alloc ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtinyxml2::MemPool\fP\&.
.PP
Definition at line 367 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> void \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::Clear ()\fC [inline]\fP"

.PP
Definition at line 347 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> int \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::CurrentAllocs () const\fC [inline]\fP"

.PP
Definition at line 363 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> virtual void \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::Free (void * mem)\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtinyxml2::MemPool\fP\&.
.PP
Definition at line 393 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> virtual int \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::ItemSize () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtinyxml2::MemPool\fP\&.
.PP
Definition at line 360 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> void \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::SetTracked ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Implements \fBtinyxml2::MemPool\fP\&.
.PP
Definition at line 411 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> void \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::Trace (const char * name)\fC [inline]\fP"

.PP
Definition at line 405 of file tinyxml2\&.h\&.
.SS "template<int ITEM_SIZE> int \fBtinyxml2::MemPoolT\fP< ITEM_SIZE >::Untracked () const\fC [inline]\fP"

.PP
Definition at line 415 of file tinyxml2\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Research Project from the source code\&.
